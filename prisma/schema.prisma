// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @default(false) @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at")
  sessions      Session[]
  accounts      Account[]

  role       String?
  banned     Boolean?  @default(false)
  banReason  String?   @map("ban_reason")
  banExpires DateTime? @map("ban_expires")

  notifications Notification[]

  @@unique([email])
  @@map("users")
}

model Session {
  id        String   @id
  expiresAt DateTime @map("expires_at")
  token     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  impersonatedBy String? @map("impersonated_by")

  @@unique([token])
  @@map("sessions")
}

model Account {
  id                    String    @id
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at")
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at")
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")

  @@map("accounts")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime @map("expires_at")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("verification")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  subCategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id         String   @id @default(cuid())
  name       String
  slug       String   @unique
  categoryId String   @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")

  @@unique([name, categoryId])
  @@map("sub_categories")
}

model ProductType {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  // products Product[]

  @@map("product_types")
}

model Banner {
  id        String   @id @default(cuid())
  title     String
  image     String
  link      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("banners")
}

model Announcement {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("announcements")
}

model DiscountCode {
  id          String   @id @default(cuid())
  code        String   @unique
  description String?
  percentage  Float
  active      Boolean  @default(true)
  startDate   DateTime @default(now()) @map("start_date")
  endDate     DateTime @map("end_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("discount_codes")
}

model Notification {
  id            String   @id @default(cuid())
  userId        String   @map("user_id")
  referenceId   String?  @map("reference_id")
  referenceType String?  @map("reference_type")
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title         String
  content       String
  read          Boolean  @default(false)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("notifications")
}

model AdminNotification {
  id            String   @id @default(cuid())
  referenceId   String?  @map("reference_id")
  referenceType String?  @map("reference_type")
  title         String
  content       String
  read          Boolean  @default(false)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("admin_notifications")
}

// TODO: PRODUCT MODEL, ORDERS, ORDER ITEMS, USER CARTS USER DISCOUNT CODES.
